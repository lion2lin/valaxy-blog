import{_ as D}from"./ValaxyMain.vue_vue_type_style_index_0_lang-25811ab0.js";import{_ as i,p as y,c as C,w as t,o as F,a as d,b as l,d as s,e as o,r as a,f as u}from"./app-c46077e5.js";import"./YunFooter.vue_vue_type_script_setup_true_lang-d1b6fd92.js";import"./YunCard.vue_vue_type_style_index_0_lang-73a41d74.js";import"./YunPageHeader.vue_vue_type_script_setup_true_lang-8971e1fe.js";const es=JSON.parse('{"title":"smallCCompiler","description":"","frontmatter":{"layout":"post","title":"smallCCompiler","date":"2023-01-17T00:00:00.000Z","updated":"2023-01-17T00:00:00.000Z","tags":["C","QT","Yacc/Bison","Lex/Flex","编译器","作业"],"categories":"小作业","cover":"https://cdn.yuumi.link/images/smallCCompiler/image-20221111165005827.png"},"headers":[{"level":2,"title":"程序使用","slug":"程序使用","link":"#程序使用","children":[{"level":3,"title":"运行环境","slug":"运行环境","link":"#运行环境","children":[]},{"level":3,"title":"使用方法","slug":"使用方法","link":"#使用方法","children":[]},{"level":3,"title":"测试方法","slug":"测试方法","link":"#测试方法","children":[]}]},{"level":2,"title":"程序设计","slug":"程序设计","link":"#程序设计","children":[{"level":3,"title":"开发环境","slug":"开发环境","link":"#开发环境","children":[]},{"level":3,"title":"编译器","slug":"编译器","link":"#编译器","children":[]},{"level":3,"title":"虚拟机","slug":"虚拟机","link":"#虚拟机","children":[]},{"level":3,"title":"模块架构","slug":"模块架构","link":"#模块架构","children":[]},{"level":3,"title":"全局数据结构、常量和变量","slug":"全局数据结构、常量和变量","link":"#全局数据结构、常量和变量","children":[]},{"level":3,"title":"函数原型","slug":"函数原型","link":"#函数原型","children":[]}]},{"level":2,"title":"测试说明","slug":"测试说明","link":"#测试说明","children":[{"level":3,"title":"测试环境","slug":"测试环境","link":"#测试环境","children":[]},{"level":3,"title":"基本测试流程","slug":"基本测试流程","link":"#基本测试流程","children":[]},{"level":3,"title":"测试用例描述","slug":"测试用例描述","link":"#测试用例描述","children":[]}]}],"relativePath":"pages/posts/smallCCompiler.md","path":"/home/runner/work/Yuumi0221.github.io/Yuumi0221.github.io/pages/posts/smallCCompiler.md","lastUpdated":1691045617000}'),r=JSON.parse('{"title":"smallCCompiler","description":"","frontmatter":{"layout":"post","title":"smallCCompiler","date":"2023-01-17T00:00:00.000Z","updated":"2023-01-17T00:00:00.000Z","tags":["C","QT","Yacc/Bison","Lex/Flex","编译器","作业"],"categories":"小作业","cover":"https://cdn.yuumi.link/images/smallCCompiler/image-20221111165005827.png"},"headers":[{"level":2,"title":"程序使用","slug":"程序使用","link":"#程序使用","children":[{"level":3,"title":"运行环境","slug":"运行环境","link":"#运行环境","children":[]},{"level":3,"title":"使用方法","slug":"使用方法","link":"#使用方法","children":[]},{"level":3,"title":"测试方法","slug":"测试方法","link":"#测试方法","children":[]}]},{"level":2,"title":"程序设计","slug":"程序设计","link":"#程序设计","children":[{"level":3,"title":"开发环境","slug":"开发环境","link":"#开发环境","children":[]},{"level":3,"title":"编译器","slug":"编译器","link":"#编译器","children":[]},{"level":3,"title":"虚拟机","slug":"虚拟机","link":"#虚拟机","children":[]},{"level":3,"title":"模块架构","slug":"模块架构","link":"#模块架构","children":[]},{"level":3,"title":"全局数据结构、常量和变量","slug":"全局数据结构、常量和变量","link":"#全局数据结构、常量和变量","children":[]},{"level":3,"title":"函数原型","slug":"函数原型","link":"#函数原型","children":[]}]},{"level":2,"title":"测试说明","slug":"测试说明","link":"#测试说明","children":[{"level":3,"title":"测试环境","slug":"测试环境","link":"#测试环境","children":[]},{"level":3,"title":"基本测试流程","slug":"基本测试流程","link":"#基本测试流程","children":[]},{"level":3,"title":"测试用例描述","slug":"测试用例描述","link":"#测试用例描述","children":[]}]}],"relativePath":"pages/posts/smallCCompiler.md","path":"/home/runner/work/Yuumi0221.github.io/Yuumi0221.github.io/pages/posts/smallCCompiler.md","lastUpdated":1691045617000}'),A={name:"pages/posts/smallCCompiler.md",data(){return{data:r,frontmatter:r.frontmatter}},setup(){y("pageData",r)}},h=l("p",null,"一个 SmallC 语言的编译器",-1),_=l("p",null,[s("smallC 语言在语法上与 C 语言类似，要比 C 语言简单的多。它的所有变量都是整型变量。具有 IF、WHILE 等控制语句。注释用 “"),l("code",null,"/*"),s("” 和 “"),l("code",null,"*/"),s("” 括起来，但不能嵌套。表达式局限于布尔表达式和算术表达式。语言的单词符号有：")],-1),m=l("ul",null,[l("li",null,[l("strong",null,"标识符"),s("：字母打头，后接字母或数字，识别出的标识符用ID标记")]),l("li",null,[l("strong",null,"保留字"),s("（它是标识符的子集）："),l("code",null,"if"),s(", "),l("code",null,"else"),s(", "),l("code",null,"for"),s(", "),l("code",null,"while"),s(", "),l("code",null,"do"),s(", "),l("code",null,"int"),s(", "),l("code",null,"read"),s(", "),l("code",null,"write")]),l("li",null,[l("strong",null,"无符号整数"),s("：由数字组成，用NUM标记")]),l("li",null,[l("strong",null,"分界符"),s("：如 "),l("code",null,"+"),s("、"),l("code",null,"-"),s("、"),l("code",null,"*"),s("、"),l("code",null,"/"),s("、"),l("code",null,"("),s("、"),l("code",null,")"),s("、"),l("code",null,";"),s("、"),l("code",null,"!"),s(" 等单分界符，还有双字符分界符 "),l("code",null,">="),s("、"),l("code",null,"<="),s("、"),l("code",null,"!="),s("、"),l("code",null,"=="),s(" 等。")]),l("li",null,[l("strong",null,"注释符"),s("：用 "),l("code",null,"/*…*/"),s(" 括起")])],-1),g=l("p",null,"词法分析程序并不输出注释，在词法分析阶段，注释的内容将被删掉。为了从源程序字符流中正确识别出各类单词符号，相邻的标识符、整数或保留字之间至少要用一个空格分开。",-1),f=l("div",{class:"language-c"},[l("span",{class:"copy"}),l("pre",{class:"shiki material-theme-palenight",tabindex:"0"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"ID"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," ∷"),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"letter"),l("span",{style:{color:"#89DDFF"}},">|<"),l("span",{style:{color:"#A6ACCD"}},"ID"),l("span",{style:{color:"#89DDFF"}},"><"),l("span",{style:{color:"#A6ACCD"}},"letter"),l("span",{style:{color:"#89DDFF"}},">|<"),l("span",{style:{color:"#A6ACCD"}},"ID"),l("span",{style:{color:"#89DDFF"}},"><"),l("span",{style:{color:"#A6ACCD"}},"digit"),l("span",{style:{color:"#89DDFF"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"NUM"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," ∷"),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"digit"),l("span",{style:{color:"#89DDFF"}},">|<"),l("span",{style:{color:"#A6ACCD"}},"NUM"),l("span",{style:{color:"#89DDFF"}},"><"),l("span",{style:{color:"#A6ACCD"}},"digit"),l("span",{style:{color:"#89DDFF"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"letter"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," ∷"),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," a"),l("span",{style:{color:"#89DDFF"}},"|"),l("span",{style:{color:"#A6ACCD"}},"b"),l("span",{style:{color:"#89DDFF"}},"|"),l("span",{style:{color:"#A6ACCD"}},"…"),l("span",{style:{color:"#89DDFF"}},"|"),l("span",{style:{color:"#A6ACCD"}},"z"),l("span",{style:{color:"#89DDFF"}},"|"),l("span",{style:{color:"#A6ACCD"}},"A"),l("span",{style:{color:"#89DDFF"}},"|"),l("span",{style:{color:"#A6ACCD"}},"B"),l("span",{style:{color:"#89DDFF"}},"|"),l("span",{style:{color:"#A6ACCD"}},"…"),l("span",{style:{color:"#89DDFF"}},"|"),l("span",{style:{color:"#A6ACCD"}},"Z")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"digit"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," ∷"),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#F78C6C"}},"1"),l("span",{style:{color:"#89DDFF"}},"|"),l("span",{style:{color:"#F78C6C"}},"2"),l("span",{style:{color:"#89DDFF"}},"|"),l("span",{style:{color:"#A6ACCD"}},"…"),l("span",{style:{color:"#89DDFF"}},"|"),l("span",{style:{color:"#F78C6C"}},"9"),l("span",{style:{color:"#89DDFF"}},"|"),l("span",{style:{color:"#F78C6C"}},"0")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"singleword"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," ∷"),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"+|-|*|/|=|(|)|{|}|"),l("span",{style:{color:"#A6ACCD"}},":"),l("span",{style:{color:"#89DDFF"}},"|,|;|<|>|!")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"doubleword"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," ∷"),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},">=|<=|!=|==")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"commend_first"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," ∷"),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#676E95","font-style":"italic"}}," /*")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#676E95","font-style":"italic"}},"<commend_last> ∷= */")]),s(`
`),l("span",{class:"line"})])])],-1),x=l("p",null,"EBNF描述为：",-1),b=l("div",{class:"language-c"},[l("span",{class:"copy"}),l("pre",{class:"shiki material-theme-palenight",tabindex:"0"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"program"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," ∷"),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{<"),l("span",{style:{color:"#F07178"}},"declaration_list"),l("span",{style:{color:"#89DDFF"}},"><"),l("span",{style:{color:"#F07178"}},"statement_list"),l("span",{style:{color:"#89DDFF"}},">}")]),s(`
`),l("span",{class:"line"}),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"declaration_list"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," ∷"),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"declaration_list"),l("span",{style:{color:"#89DDFF"}},"><"),l("span",{style:{color:"#A6ACCD"}},"declaration_stat"),l("span",{style:{color:"#89DDFF"}},">|<"),l("span",{style:{color:"#A6ACCD"}},"declaration_stat"),l("span",{style:{color:"#89DDFF"}},">|"),l("span",{style:{color:"#A6ACCD"}},"ε")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"declaration_stat"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," ∷"),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"int"),l("span",{style:{color:"#A6ACCD"}}," ID"),l("span",{style:{color:"#89DDFF"}},";")]),s(`
`),l("span",{class:"line"}),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"statement_list"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," ∷"),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"statement_list"),l("span",{style:{color:"#89DDFF"}},"><"),l("span",{style:{color:"#A6ACCD"}},"statement"),l("span",{style:{color:"#89DDFF"}},">|<"),l("span",{style:{color:"#A6ACCD"}},"statement"),l("span",{style:{color:"#89DDFF"}},">|"),l("span",{style:{color:"#A6ACCD"}},"ε")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"statement"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," ∷"),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"if_stat"),l("span",{style:{color:"#89DDFF"}},">|<"),l("span",{style:{color:"#A6ACCD"}},"while_stat"),l("span",{style:{color:"#89DDFF"}},">|<"),l("span",{style:{color:"#A6ACCD"}},"read_stat"),l("span",{style:{color:"#89DDFF"}},">|<"),l("span",{style:{color:"#A6ACCD"}},"write_stat"),l("span",{style:{color:"#89DDFF"}},">|<"),l("span",{style:{color:"#A6ACCD"}},"compound_stat"),l("span",{style:{color:"#89DDFF"}},">|<"),l("span",{style:{color:"#A6ACCD"}},"expression_stat"),l("span",{style:{color:"#89DDFF"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"compound_stat"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," ∷"),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{<"),l("span",{style:{color:"#F07178"}},"statement_list"),l("span",{style:{color:"#89DDFF"}},">}")]),s(`
`),l("span",{class:"line"}),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"expression_stat"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," ∷"),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"expression"),l("span",{style:{color:"#89DDFF"}},">;|;")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"expression"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," ∷"),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," ID"),l("span",{style:{color:"#89DDFF"}},"=<"),l("span",{style:{color:"#A6ACCD"}},"bool_expr"),l("span",{style:{color:"#89DDFF"}},">|<"),l("span",{style:{color:"#A6ACCD"}},"bool_expr"),l("span",{style:{color:"#89DDFF"}},">")]),s(`
`),l("span",{class:"line"}),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"if_stat"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," ∷"),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF","font-style":"italic"}},"if"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"(<"),l("span",{style:{color:"#A6ACCD"}},"expression"),l("span",{style:{color:"#89DDFF"}},">)"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"statement"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"["),l("span",{style:{color:"#89DDFF","font-style":"italic"}},"else"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"statement"),l("span",{style:{color:"#89DDFF"}},">]")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"while_stat"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," ∷"),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF","font-style":"italic"}},"while"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"(<"),l("span",{style:{color:"#A6ACCD"}},"expression"),l("span",{style:{color:"#89DDFF"}},">)"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"statement"),l("span",{style:{color:"#89DDFF"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"write_stat"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," ∷"),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," write "),l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"expression"),l("span",{style:{color:"#89DDFF"}},">;")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"read_stat"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," ∷"),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," read ID"),l("span",{style:{color:"#89DDFF"}},";")]),s(`
`),l("span",{class:"line"}),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"bool_expr"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," ∷"),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"additive_expr"),l("span",{style:{color:"#89DDFF"}},">|<"),l("span",{style:{color:"#A6ACCD"}},"additive_expr"),l("span",{style:{color:"#89DDFF"}},">(>|<|>=|<=|==|!=)<"),l("span",{style:{color:"#A6ACCD"}},"additive_expr"),l("span",{style:{color:"#89DDFF"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"additive_expr"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," ∷"),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"term"),l("span",{style:{color:"#89DDFF"}},">{(+|-)<"),l("span",{style:{color:"#F07178"}},"term"),l("span",{style:{color:"#89DDFF"}},">}")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"term"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," ∷"),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"factor"),l("span",{style:{color:"#89DDFF"}},">{(*|/)<"),l("span",{style:{color:"#F07178"}},"factor"),l("span",{style:{color:"#89DDFF"}},">}")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"factor"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," ∷"),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"(<"),l("span",{style:{color:"#A6ACCD"}},"expression"),l("span",{style:{color:"#89DDFF"}},">)|"),l("span",{style:{color:"#A6ACCD"}},"ID"),l("span",{style:{color:"#89DDFF"}},"|"),l("span",{style:{color:"#A6ACCD"}},"NUM")]),s(`
`),l("span",{class:"line"})])])],-1),v=l("div",{class:"language-"},[l("span",{class:"copy"}),l("pre",{class:"shiki material-theme-palenight",tabindex:"0"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"code")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"│  README.md		// 此文档")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"│  TEST.md			// 测试说明文档")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"│  ")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"├─myCompiler")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"│     myCompiler.pro	// QT文件")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"│          ")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"├─release")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"│     c_o_d_e.txt		// 缓存代码")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"│     fcode.txt			// 缓存机器指令")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"│     finput.txt		// 缓存输入")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"│     foutput.txt		// 缓存是否成功")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"│     fresult.txt		// 缓存输出")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"│     ftable.txt		// 缓存符号表")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"│     myCompiler.exe	// 编译器GUI")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"│     smallC.exe		// 编译器本体")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"│     test_1.txt		// 测试文件1234")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"│     test_2.txt")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"│     test_3.txt")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"│     test_4.txt")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"│")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"└─smallC1.2")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"        c_o_d_e.txt		// 编译器测试代码")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"        smallC.exe		// 编译器本体")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"        smallC.l		// flex/lex文件")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"        smallC.y		// yacc/bison文件")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}})])])])],-1),k={id:"程序使用",tabindex:"-1"},I=l("code",null,"release",-1),w=l("code",null,"myCompiler.exe",-1),E={id:"运行环境",tabindex:"-1"},N=l("ul",null,[l("li",null,"Windows 64位操作系统")],-1),B={id:"使用方法",tabindex:"-1"},M=l("ol",null,[l("li",null,[l("strong",null,"运行程序"),s("：双击打开 "),l("code",null,"myCompiler.exe"),s(" ，看到界面，则运行成功。")])],-1),U=l("p",null,[l("img",{src:"https://cdn.yuumi.link/images/smallCCompiler/image-20221108165444308.png",alt:"image-20221108165444308"})],-1),L=l("ol",{start:"2"},[l("li",null,[l("p",null,[l("strong",null,"输入或导入代码"),s("："),l("img",{src:"https://cdn.yuumi.link/images/smallCCompiler/image-20221108165755509.png",alt:"image-20221108165755509"}),s("可以选择在左侧上方的框中直接输入代码，或者点击按钮导入准备好的 smallC 语言代码文件。导入之后代码将显示在编辑框中，可以继续编辑。此处导入了求两个整数的最小公倍数代码。")]),l("p",null,[l("img",{src:"https://cdn.yuumi.link/images/smallCCompiler/image-20221108165950311.png",alt:"image-20221108165950311"})])]),l("li",null,[l("p",null,[l("strong",null,"另存为代码"),s("："),l("img",{src:"https://cdn.yuumi.link/images/smallCCompiler/image-20221108170804968.png",alt:"image-20221108170804968"}),s("点击另存为按钮后，编辑区的代码将被保存到用户选择的路径中。")])]),l("li",null,[l("p",null,[l("strong",null,"保存代码"),s("："),l("img",{src:"https://cdn.yuumi.link/images/smallCCompiler/image-20221108170420629.png",alt:"image-20221108170420629"}),s("若用户另存为或导入过文件后点击保存按钮，则编辑区的代码都将保存在用户之前选择的文件中。若用户未另存为或导入文件，点击保存按钮后会将编辑框中的代码另存为到用户选择的路径。")])]),l("li",null,[l("p",null,[l("strong",null,"程序输入"),s("：若编写的代码程序中有 "),l("code",null,"read id;"),s(" ，则需要在 "),l("code",null,"程序输入框"),s(" 中进行输入。若有多个输入，则需要在每个输入间插入空格，或者换行。该代码需要输入两个数字，此处输入了24和36。")]),l("p",null,[l("img",{src:"https://cdn.yuumi.link/images/smallCCompiler/image-20221108170215257.png",alt:"image-20221108170215257"})])]),l("li",null,[l("p",null,[l("strong",null,"编译运行"),s("："),l("img",{src:"https://cdn.yuumi.link/images/smallCCompiler/image-20221108173224093.png",alt:"image-20221108173224093"}),s("点击编译运行按钮，可以在右侧看到编译运行结果。")]),l("p",null,[l("img",{src:"https://cdn.yuumi.link/images/smallCCompiler/image-20221111165005827.png",alt:"image-20221111165005827"})])])],-1),T=l("p",null,[l("img",{src:"https://cdn.yuumi.link/images/smallCCompiler/image-20221108173428287.png",alt:"image-20221108173428287"}),l("em",null,"运行成功")],-1),$=l("p",null,[l("img",{src:"https://cdn.yuumi.link/images/smallCCompiler/image-20221108173447851.png",alt:"image-20221108173447851"}),l("em",null,"程序中有错误，程序输出可能不正确，需要将错误全部修改才能得到正确输出")],-1),P=l("p",null,[l("img",{src:"https://cdn.yuumi.link/images/smallCCompiler/image-20221108173628384.png",alt:"image-20221108173628384"}),l("em",null,"该程序的符号表")],-1),S=l("p",null,[l("img",{src:"https://cdn.yuumi.link/images/smallCCompiler/image-20221108175130043.png",alt:"image-20221108175130043"}),l("em",null,"该程序的机器指令代码")],-1),Y=l("p",null,[l("img",{src:"https://cdn.yuumi.link/images/smallCCompiler/image-20221108175147126.png",alt:"image-20221108175147126"}),l("em",null,"该程序的输出结果。此处为24和36的最小公倍数：72")],-1),O={id:"测试方法",tabindex:"-1"},J=l("code",null,"release",-1),z=l("code",null,"test_x.txt",-1),W={id:"程序设计",tabindex:"-1"},j=l("p",null,"该程序使用QT框架，flex & bison（即Windows版的 lex & yacc）编写。",-1),Q={id:"开发环境",tabindex:"-1"},V=l("ul",null,[l("li",null,"QT 6.4.0"),l("li",null,"MinGW 11.2.0"),l("li",null,"flex 2.5.4"),l("li",null,"bison 2.4.1"),l("li",null,"C++ 11")],-1),Z={id:"编译器",tabindex:"-1"},R=l("p",null,[s("smallC语言在语法上与C语言类似，要比C语言简单的多。它的所有变量都是整型变量。具有 "),l("code",null,"IF"),s(", "),l("code",null,"WHILE"),s(" 等控制语句。注释用 "),l("code",null,"/*"),s(" 和 "),l("code",null,"*/"),s(" 括起来，但不能嵌套。表达式局限于布尔表达式和算术表达式。")],-1),G={id:"smallc语言语法规则",tabindex:"-1"},H=l("p",null,"基本的语法规则要求为：",-1),X=l("div",{class:"language-c"},[l("span",{class:"copy"}),l("pre",{class:"shiki material-theme-palenight",tabindex:"0"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"program"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," ∷"),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{<"),l("span",{style:{color:"#F07178"}},"declaration_list"),l("span",{style:{color:"#89DDFF"}},"><"),l("span",{style:{color:"#F07178"}},"statement_list"),l("span",{style:{color:"#89DDFF"}},">}")]),s(`
`),l("span",{class:"line"}),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"declaration_list"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," ∷"),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"declaration_list"),l("span",{style:{color:"#89DDFF"}},"><"),l("span",{style:{color:"#A6ACCD"}},"declaration_stat"),l("span",{style:{color:"#89DDFF"}},">|<"),l("span",{style:{color:"#A6ACCD"}},"declaration_stat"),l("span",{style:{color:"#89DDFF"}},">|"),l("span",{style:{color:"#A6ACCD"}},"ε")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"declaration_stat"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," ∷"),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"int"),l("span",{style:{color:"#A6ACCD"}}," ID"),l("span",{style:{color:"#89DDFF"}},";")]),s(`
`),l("span",{class:"line"}),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"statement_list"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," ∷"),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"statement_list"),l("span",{style:{color:"#89DDFF"}},"><"),l("span",{style:{color:"#A6ACCD"}},"statement"),l("span",{style:{color:"#89DDFF"}},">|<"),l("span",{style:{color:"#A6ACCD"}},"statement"),l("span",{style:{color:"#89DDFF"}},">|"),l("span",{style:{color:"#A6ACCD"}},"ε")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"statement"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," ∷"),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"if_stat"),l("span",{style:{color:"#89DDFF"}},">|<"),l("span",{style:{color:"#A6ACCD"}},"while_stat"),l("span",{style:{color:"#89DDFF"}},">|<"),l("span",{style:{color:"#A6ACCD"}},"read_stat"),l("span",{style:{color:"#89DDFF"}},">|<"),l("span",{style:{color:"#A6ACCD"}},"write_stat"),l("span",{style:{color:"#89DDFF"}},">|<"),l("span",{style:{color:"#A6ACCD"}},"compound_stat"),l("span",{style:{color:"#89DDFF"}},">|<"),l("span",{style:{color:"#A6ACCD"}},"expression_stat"),l("span",{style:{color:"#89DDFF"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"compound_stat"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," ∷"),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{<"),l("span",{style:{color:"#F07178"}},"statement_list"),l("span",{style:{color:"#89DDFF"}},">}")]),s(`
`),l("span",{class:"line"}),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"expression_stat"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," ∷"),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"expression"),l("span",{style:{color:"#89DDFF"}},">;|;")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"expression"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," ∷"),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," ID"),l("span",{style:{color:"#89DDFF"}},"=<"),l("span",{style:{color:"#A6ACCD"}},"bool_expr"),l("span",{style:{color:"#89DDFF"}},">|<"),l("span",{style:{color:"#A6ACCD"}},"bool_expr"),l("span",{style:{color:"#89DDFF"}},">")]),s(`
`),l("span",{class:"line"}),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"if_stat"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," ∷"),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF","font-style":"italic"}},"if"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"(<"),l("span",{style:{color:"#A6ACCD"}},"expression"),l("span",{style:{color:"#89DDFF"}},">)"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"statement"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"["),l("span",{style:{color:"#89DDFF","font-style":"italic"}},"else"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"statement"),l("span",{style:{color:"#89DDFF"}},">]")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"while_stat"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," ∷"),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF","font-style":"italic"}},"while"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"(<"),l("span",{style:{color:"#A6ACCD"}},"expression"),l("span",{style:{color:"#89DDFF"}},">)"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"statement"),l("span",{style:{color:"#89DDFF"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"write_stat"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," ∷"),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," write "),l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"expression"),l("span",{style:{color:"#89DDFF"}},">;")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"read_stat"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," ∷"),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," read ID"),l("span",{style:{color:"#89DDFF"}},";")]),s(`
`),l("span",{class:"line"}),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"bool_expr"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," ∷"),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"additive_expr"),l("span",{style:{color:"#89DDFF"}},">|<"),l("span",{style:{color:"#A6ACCD"}},"additive_expr"),l("span",{style:{color:"#89DDFF"}},">(>|<|>=|<=|==|!=)<"),l("span",{style:{color:"#A6ACCD"}},"additive_expr"),l("span",{style:{color:"#89DDFF"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"additive_expr"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," ∷"),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"term"),l("span",{style:{color:"#89DDFF"}},">{(+|-)<"),l("span",{style:{color:"#F07178"}},"term"),l("span",{style:{color:"#89DDFF"}},">}")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"term"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," ∷"),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"factor"),l("span",{style:{color:"#89DDFF"}},">{(*|/)<"),l("span",{style:{color:"#F07178"}},"factor"),l("span",{style:{color:"#89DDFF"}},">}")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"factor"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," ∷"),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"(<"),l("span",{style:{color:"#A6ACCD"}},"expression"),l("span",{style:{color:"#89DDFF"}},">)|"),l("span",{style:{color:"#A6ACCD"}},"ID"),l("span",{style:{color:"#89DDFF"}},"|"),l("span",{style:{color:"#A6ACCD"}},"NUM")]),s(`
`),l("span",{class:"line"})])])],-1),q=l("p",null,"在此基础上，我增加了：",-1),K=l("ol",null,[l("li",null,[s("增加运算符 "),l("ol",null,[l("li",null,"求余运算符%"),l("li",null,"异或运算符XOR"),l("li",null,"判断整数的奇偶ODD"),l("li",null,"自增++，自减--")])]),l("li",null,[s("增加语句，语法参照C语言 "),l("ol",null,[l("li",null,"for语句"),l("li",null,"exit语句"),l("li",null,"do…while语句"),l("li",null,"repeat…until语句")])]),l("li",null,[s("增加基本数据类型 "),l("ol",null,[l("li",null,"可扩充到支持布尔数据类型，应支持and，or，not等布尔数据运算")])]),l("li",null,"增加常量(const)的定义与使用，区分变量与常量")],-1),ll=l("p",null,"因此自行添加、修改了语法规则，修改后为：",-1),sl=l("div",{class:"language-c"},[l("span",{class:"copy"}),l("pre",{class:"shiki material-theme-palenight",tabindex:"0"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"program"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," ∷"),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{<"),l("span",{style:{color:"#F07178"}},"const_decl"),l("span",{style:{color:"#89DDFF"}},"><"),l("span",{style:{color:"#F07178"}},"var_decl"),l("span",{style:{color:"#89DDFF"}},"><"),l("span",{style:{color:"#F07178"}},"statement"),l("span",{style:{color:"#89DDFF"}},">}")]),s(`
`),l("span",{class:"line"}),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"const_decl"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," ∷"),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"const"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"const_list"),l("span",{style:{color:"#89DDFF"}},">;|"),l("span",{style:{color:"#A6ACCD"}},"ε")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"const_list"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," ∷"),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"const_def"),l("span",{style:{color:"#89DDFF"}},">|<"),l("span",{style:{color:"#A6ACCD"}},"const_list"),l("span",{style:{color:"#89DDFF"}},">,<"),l("span",{style:{color:"#A6ACCD"}},"const_def"),l("span",{style:{color:"#89DDFF"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"const_def"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," ∷"),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," ID"),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}},"NUM")]),s(`
`),l("span",{class:"line"}),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"var_decl"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," ∷"),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"int"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"var_list"),l("span",{style:{color:"#89DDFF"}},">;|"),l("span",{style:{color:"#A6ACCD"}},"ε")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"var_list"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," ∷"),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"var_def"),l("span",{style:{color:"#89DDFF"}},">|<"),l("span",{style:{color:"#A6ACCD"}},"var_list"),l("span",{style:{color:"#89DDFF"}},">,<"),l("span",{style:{color:"#A6ACCD"}},"var_def"),l("span",{style:{color:"#89DDFF"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"var_def"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," ∷"),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," ID")]),s(`
`),l("span",{class:"line"}),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"statement_list"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," ∷"),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"statement_list"),l("span",{style:{color:"#89DDFF"}},"><"),l("span",{style:{color:"#A6ACCD"}},"statement"),l("span",{style:{color:"#89DDFF"}},">|<"),l("span",{style:{color:"#A6ACCD"}},"statement"),l("span",{style:{color:"#89DDFF"}},">|"),l("span",{style:{color:"#A6ACCD"}},"ε")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"statement"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," ∷"),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"if_stat"),l("span",{style:{color:"#89DDFF"}},">|<"),l("span",{style:{color:"#A6ACCD"}},"while_stat"),l("span",{style:{color:"#89DDFF"}},">|<"),l("span",{style:{color:"#A6ACCD"}},"read_stat"),l("span",{style:{color:"#89DDFF"}},">|<"),l("span",{style:{color:"#A6ACCD"}},"write_stat"),l("span",{style:{color:"#89DDFF"}},">|<"),l("span",{style:{color:"#A6ACCD"}},"compound_stat"),l("span",{style:{color:"#89DDFF"}},">|<"),l("span",{style:{color:"#A6ACCD"}},"expression_stat"),l("span",{style:{color:"#89DDFF"}},">|<"),l("span",{style:{color:"#A6ACCD"}},"exit_stat"),l("span",{style:{color:"#89DDFF"}},">|<"),l("span",{style:{color:"#A6ACCD"}},"for_stat"),l("span",{style:{color:"#89DDFF"}},">|<"),l("span",{style:{color:"#A6ACCD"}},"do_when_stat"),l("span",{style:{color:"#89DDFF"}},">|<"),l("span",{style:{color:"#A6ACCD"}},"repeat_until_stat"),l("span",{style:{color:"#89DDFF"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"compound_stat"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," ∷"),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{<"),l("span",{style:{color:"#F07178"}},"statement_list"),l("span",{style:{color:"#89DDFF"}},">}")]),s(`
`),l("span",{class:"line"}),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"expression_stat"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," ∷"),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"expression"),l("span",{style:{color:"#89DDFF"}},">;|;")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"expression"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," ∷"),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," ID"),l("span",{style:{color:"#89DDFF"}},"=<"),l("span",{style:{color:"#A6ACCD"}},"and_or_expr"),l("span",{style:{color:"#89DDFF"}},">|<"),l("span",{style:{color:"#A6ACCD"}},"and_or_expr"),l("span",{style:{color:"#89DDFF"}},">")]),s(`
`),l("span",{class:"line"}),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"exit_stat"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," ∷"),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," exit")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"if_stat"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," ∷"),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF","font-style":"italic"}},"if"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"(<"),l("span",{style:{color:"#A6ACCD"}},"expression"),l("span",{style:{color:"#89DDFF"}},">)"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"statement"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"["),l("span",{style:{color:"#89DDFF","font-style":"italic"}},"else"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"statement"),l("span",{style:{color:"#89DDFF"}},">]")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"while_stat"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," ∷"),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF","font-style":"italic"}},"while"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"(<"),l("span",{style:{color:"#A6ACCD"}},"expression"),l("span",{style:{color:"#89DDFF"}},">)"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"statement"),l("span",{style:{color:"#89DDFF"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"do_when_stat"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," ∷"),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF","font-style":"italic"}},"do"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"statement"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#82AAFF"}},"when"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"(<"),l("span",{style:{color:"#A6ACCD"}},"expression"),l("span",{style:{color:"#89DDFF"}},">)")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"repeat_until_stat"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," ∷"),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," repeat "),l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"statement"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#82AAFF"}},"until"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"(<"),l("span",{style:{color:"#A6ACCD"}},"expression"),l("span",{style:{color:"#89DDFF"}},">)")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"for_stat"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," ∷"),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF","font-style":"italic"}},"for"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"("),l("span",{style:{color:"#A6ACCD"}},"ID"),l("span",{style:{color:"#89DDFF"}},"=<"),l("span",{style:{color:"#A6ACCD"}},"and_or_expr"),l("span",{style:{color:"#89DDFF"}},">|"),l("span",{style:{color:"#A6ACCD"}},"ε"),l("span",{style:{color:"#89DDFF"}},";<"),l("span",{style:{color:"#A6ACCD"}},"expression"),l("span",{style:{color:"#89DDFF"}},">;<"),l("span",{style:{color:"#A6ACCD"}},"expression"),l("span",{style:{color:"#89DDFF"}},">)"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"statement"),l("span",{style:{color:"#89DDFF"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"write_stat"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," ∷"),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," write "),l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"expression"),l("span",{style:{color:"#89DDFF"}},">;")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"read_stat"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," ∷"),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," read ID"),l("span",{style:{color:"#89DDFF"}},";")]),s(`
`),l("span",{class:"line"}),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"and_or_expr"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," ∷"),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"bool_expr"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{&&"),l("span",{style:{color:"#F07178"}}," "),l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#F07178"}},"bool_expr"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#F07178"}}," "),l("span",{style:{color:"#89DDFF"}},"|"),l("span",{style:{color:"#F07178"}}," "),l("span",{style:{color:"#89DDFF"}},"||<"),l("span",{style:{color:"#F07178"}},"bool_expr"),l("span",{style:{color:"#89DDFF"}},">}")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"bool_expr"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," ∷"),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"additive_expr"),l("span",{style:{color:"#89DDFF"}},">|"),l("span",{style:{color:"#A6ACCD"}},"odd "),l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"additive_expr"),l("span",{style:{color:"#89DDFF"}},">|<"),l("span",{style:{color:"#A6ACCD"}},"additive_expr"),l("span",{style:{color:"#89DDFF"}},">(>|<|>=|<=|==|!=|^)<"),l("span",{style:{color:"#A6ACCD"}},"additive_expr"),l("span",{style:{color:"#89DDFF"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"additive_expr"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," ∷"),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"term"),l("span",{style:{color:"#89DDFF"}},">{(+|-)<"),l("span",{style:{color:"#F07178"}},"term"),l("span",{style:{color:"#89DDFF"}},">}")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"term"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," ∷"),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"not_term"),l("span",{style:{color:"#89DDFF"}},">{(*|/|%)<"),l("span",{style:{color:"#F07178"}},"not_term"),l("span",{style:{color:"#89DDFF"}},">}")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"not_term"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," ∷"),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"factor"),l("span",{style:{color:"#89DDFF"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#A6ACCD"}},"factor"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," ∷"),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"[!]"),l("span",{style:{color:"#A6ACCD"}}," ID"),l("span",{style:{color:"#89DDFF"}},"|"),l("span",{style:{color:"#A6ACCD"}},"NUM"),l("span",{style:{color:"#89DDFF"}},"|(<"),l("span",{style:{color:"#A6ACCD"}},"expression"),l("span",{style:{color:"#89DDFF"}},">)")]),s(`
`),l("span",{class:"line"})])])],-1),tl={id:"smallc语言语法图",tabindex:"-1"},nl=l("p",null,"根据 smallC 的 EBNF 文法，附加上自己添加的扩展点，画出以下 smallC 的语法图：",-1),ol=l("p",null,[l("img",{src:"https://cdn.yuumi.link/images/smallCCompiler/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E5%9B%BE.png",alt:"编译原理图"})],-1),el={id:"判断是否符合两条限制规则",tabindex:"-1"},al=l("p",null,"判断是否符合两条限制规则的方法为：",-1),rl=l("ol",null,[l("li",null,"找出图中每一个分支点，考察每个分支点的各个分支的头符号是否相异。"),l("li",null,"找出图中每一个透明结构，考察每个透明结构的头符号集合与其跟随符号集合是否相异。")],-1),cl=l("p",null,"依照以上方法，自上而下，依次考察每一个语法图。",-1),pl=l("ol",null,[l("li",null,[l("p",null,"program"),l("p",null,"没有分支点，也没有透明结构，无需讨论。")]),l("li",null,[l("p",null,"const_decl"),l("p",null,"分支点的各个分支的头符号相异：ε 和 const 以及 ; 和 ,"),l("p",null,"每个透明结构的头符号集合与其跟随符号集合相异：; 和 ,")]),l("li",null,[l("p",null,"var_decl"),l("p",null,"分支点的各个分支的头符号相异：ε 和 int 以及 ; 和 ,"),l("p",null,"每个透明结构的头符号集合与其跟随符号集合相异：; 和 ,")]),l("li",null,[l("p",null,"statement_list"),l("p",null,"分支点的各个分支的头符号相异：ε 和 { if while read ; ID odd + - ! NUM ( exit for do repeat"),l("p",null,"每个透明结构的头符号集合与其跟随符号集合相异：ε 和 { if while read ; ID odd + - ! NUM ( exit for do repeat")]),l("li",null,[l("p",null,"statement"),l("p",null,"分支点的各个分支的头符号相异：{ 和 if 和 while 和 read 和 ; ID odd + - ! NUM ( 和 exit 和 for 和 do 和 repeat"),l("p",null,"没有透明结构")]),l("li",null,[l("p",null,"compound_stat"),l("p",null,"没有分支点，也没有透明结构，无需讨论。")]),l("li",null,[l("p",null,"expression_stat"),l("p",null,"分支点的各个分支的头符号相异：; 和 ID odd + - ! NUM"),l("p",null,"没有透明结构")]),l("li",null,[l("p",null,"expression"),l("p",null,"分支点的各个分支的头符号相异：ID 和 odd + - ! NUM"),l("p",null,"没有透明结构")]),l("li",null,[l("p",null,"exit_stat"),l("p",null,"没有分支点，也没有透明结构，无需讨论。")]),l("li",null,[l("p",null,"if_stat"),l("p",null,"分支点的各个分支的头符号相异：ε 和 else"),l("p",null,"每个透明结构的头符号集合与其跟随符号集合相异：ε 和 else")]),l("li",null,[l("p",null,"while_stat"),l("p",null,"没有分支点，也没有透明结构，无需讨论。")]),l("li",null,[l("p",null,"do_when_stat"),l("p",null,"没有分支点，也没有透明结构，无需讨论。")]),l("li",null,[l("p",null,"repeat_until_stat"),l("p",null,"没有分支点，也没有透明结构，无需讨论。")]),l("li",null,[l("p",null,"for_stat"),l("p",null,"分支点的各个分支的头符号相异：ε 和 ID"),l("p",null,"每个透明结构的头符号集合与其跟随符号集合相异：; 和 ID")]),l("li",null,[l("p",null,"read_stat"),l("p",null,"没有分支点，也没有透明结构，无需讨论。")]),l("li",null,[l("p",null,"write_stat"),l("p",null,"没有分支点，也没有透明结构，无需讨论。")]),l("li",null,[l("p",null,"and_or_expr"),l("p",null,"分支点的各个分支的头符号相异：ε 和 && 和 ||"),l("p",null,"每个透明结构的头符号集合与其跟随符号集合相异：ε 和 && 和 ||")]),l("li",null,[l("p",null,"bool_expr"),l("p",null,"分支点的各个分支的头符号相异：odd 和 + - ! ID NUM ( 以及 ε 和 < 和 ≤ 和 > 和 ≥ 和 == 和 != 和 ^"),l("p",null,"每个透明结构的头符号集合与其跟随符号集合相异：ε 和 < 和 ≤ 和 > 和 ≥ 和 == 和 != 和 ^")]),l("li",null,[l("p",null,"additive_expr"),l("p",null,"分支点的各个分支的头符号相异：ε 和 + -"),l("p",null,"每个透明结构的头符号集合与其跟随符号集合相异：+ - 和 ! ID NUM ( 以及 ε 和 + -")]),l("li",null,[l("p",null,"term"),l("p",null,"分支点的各个分支的头符号相异：ε 和 * 和 / 和 %"),l("p",null,"每个透明结构的头符号集合与其跟随符号集合相异：ε 和 * 和 / 和 %")]),l("li",null,[l("p",null,"factor"),l("p",null,"分支点的各个分支的头符号相异：ε 和 ! 以及 ε 和 ++ 和 -- 以及 ID 和 NUM 和 ("),l("p",null,"每个透明结构的头符号集合与其跟随符号集合相异：ID 和 ! 以及 ε 和 ++ 和 --")])],-1),Dl={id:"程序总体结构",tabindex:"-1"},il=l("p",null,"编译程序总的框架图如下：",-1),yl=l("p",null,[l("img",{src:"https://cdn.yuumi.link/images/smallCCompiler/image-20221229001548760.png",alt:"image-20221229001548760"})],-1),Cl=l("p",null,"该编译程序的总体结构由以下几个部分组成：词法分析器、语法分析器、语义分析与中间代码生成器、目标代码生成器、表格管理、出错处理。",-1),Fl={id:"语法出错表定义",tabindex:"-1"},dl=l("table",null,[l("thead",null,[l("tr",null,[l("th",null,"错误号"),l("th",null,"错误原因")])]),l("tbody",null,[l("tr",null,[l("td",null,"1"),l("td",null,"该标识符没有说明")]),l("tr",null,[l("td",null,"2"),l("td",null,"丢了一个分号")]),l("tr",null,[l("td",null,"3"),l("td",null,"这里必须是一个变量")]),l("tr",null,[l("td",null,"4"),l("td",null,"这里不允许为常量")])])],-1),ul={id:"虚拟机",tabindex:"-1"},Al={id:"虚拟机组织结构",tabindex:"-1"},hl=l("p",null,"虚拟机的计算机结构由两个存储器、一个指令寄存器、三个地址寄存器组成。程序存储器 code 用来存放通过编译产生的中间代码程序（目标程序）。数据存储器 s 被当成数据栈（stack）使用。所有的算数和关系操作符都从栈顶找到它的操作数，又以计算结果取而代之。栈顶数据单元的地址用地址寄存器 t（top）标记。数据存储器 s 只有在代码程序被解释执行时才开始使用。指令寄存器 i 含有正在解释的指令。程序地址寄存器 p 含有下一条要从程序存储器取得的、被解释执行指令的地址。",-1),_l=l("ol",null,[l("li",null,[l("p",null,"程序存储器 code"),l("div",{class:"language-"},[l("span",{class:"copy"}),l("pre",{class:"shiki material-theme-palenight",tabindex:"0"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"code: array [0..cxmax] of instruction;")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"fct = (lit, opr, lod, sto, cal, int, jmp, jpc);")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"instruction = packed record")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"					f: fct;")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"					l: 0..levmax;")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"					a: 0..amax;")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"				end;")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}})])])])])]),l("li",null,[l("p",null,"数据存储器 s"),l("div",{class:"language-"},[l("span",{class:"copy"}),l("pre",{class:"shiki material-theme-palenight",tabindex:"0"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"s: array [1..stacksize] of integer;")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}})])])])])]),l("li",null,[l("p",null,"程序地址寄存器 p"),l("div",{class:"language-"},[l("span",{class:"copy"}),l("pre",{class:"shiki material-theme-palenight",tabindex:"0"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"p: integer;")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}})])])])])]),l("li",null,[l("p",null,"地址寄存器 t"),l("div",{class:"language-"},[l("span",{class:"copy"}),l("pre",{class:"shiki material-theme-palenight",tabindex:"0"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"t: integer;")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}})])])])])]),l("li",null,[l("p",null,"指令寄存器 i"),l("div",{class:"language-"},[l("span",{class:"copy"}),l("pre",{class:"shiki material-theme-palenight",tabindex:"0"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"i: instruction;")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}})])])])])]),l("li",null,[l("p",null,"基本地址寄存器 b"),l("div",{class:"language-"},[l("span",{class:"copy"}),l("pre",{class:"shiki material-theme-palenight",tabindex:"0"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"b: integer;")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}})])])])])])],-1),ml={id:"虚拟机指令格式",tabindex:"-1"},gl=l("p",null,"虚拟机指令以三元组为基本格式",-1),fl=l("ol",null,[l("li",null,[l("code",null,"LIT"),s(" 指令：把一个常数置入栈顶。")]),l("li",null,[l("code",null,"LOD"),s(" 指令：把一个变量置入栈顶。")]),l("li",null,[l("code",null,"STO"),s(" 指令：从栈顶把数置入到一个变量单元里。")]),l("li",null,[l("code",null,"JMP"),s(" 指令：程序无条件转移指令。")]),l("li",null,[l("code",null,"JPC"),s(" 和 "),l("code",null,"JPN"),s(" 指令：程序有条件转移指令。")]),l("li",null,[l("code",null,"OPR"),s(" 指令：一组算数和关系运算指令。")])],-1),xl={id:"虚拟机指令系统及其解释",tabindex:"-1"},bl=l("table",null,[l("thead",null,[l("tr",null,[l("th",null,"序号"),l("th",null,"指令"),l("th",null,"实现解释的PASCAL语句"),l("th",null,"说明")])]),l("tbody",null,[l("tr",null,[l("td",null,"1"),l("td",null,"LIT 0, a"),l("td",null,[s("t := t + 1;"),l("br"),s("s[t] := a;")]),l("td",null,"将数 a 置入栈顶")]),l("tr",null,[l("td",null,"2"),l("td",null,"LOD l, a"),l("td",null,[s("t := t + 1;"),l("br"),s("s[t] := s[base(l) + a];")]),l("td",null,"将 l, a 形成的栈地址变量值置入栈顶")]),l("tr",null,[l("td",null,"3"),l("td",null,"STO l, a"),l("td",null,[s("s[base(l) + a] := s[t];"),l("br"),s("t := t - 1;")]),l("td",null,"将栈顶值存到由 l, a 形成的栈地址变量")]),l("tr",null,[l("td",null,"4"),l("td",null,"JMP 0, a"),l("td",null,"p := a;"),l("td",null,"无条件转移")]),l("tr",null,[l("td",null,"5"),l("td",null,"JPC 0, a"),l("td",null,[s("if s(t) = 0 then"),l("br"),s(" p := a;"),l("br"),s("t := t - 1;")]),l("td",null,"条件转移")]),l("tr",null,[l("td",null,"6"),l("td",null,"JPN 0, a"),l("td",null,[s("if s(t) <> 0 then"),l("br"),s(" p := a;"),l("br"),s("t := t - 1;")]),l("td",null,"条件转移")]),l("tr",null,[l("td",null,"7"),l("td",null,"OPR 0, a"),l("td"),l("td",null,"一组算数关系运算符")]),l("tr",null,[l("td"),l("td",null,"当 a=0"),l("td",null,[s("t := b - 1;"),l("br"),s("p := s[t + 3];"),l("br"),s("b := s[t + 2];")]),l("td",null,"函数调用结束后返回")]),l("tr",null,[l("td"),l("td",null,"当 a=1"),l("td",null,"s[t] := - s[t];"),l("td",null,"栈顶元素取反")]),l("tr",null,[l("td"),l("td",null,"当 a=2"),l("td",null,[s("t := t - 1;"),l("br"),s("s[t] := s[t] + s[t + 1];")]),l("td",null,"次栈顶项加上栈顶项，退两个栈元素，相加值进栈")]),l("tr",null,[l("td"),l("td",null,"当 a=3"),l("td",null,[s("t := t - 1;"),l("br"),s("s[t] := s[t] - s[t + 1];")]),l("td",null,"次栈顶项减去栈顶项")]),l("tr",null,[l("td"),l("td",null,"当 a=4"),l("td",null,[s("t := t - 1;"),l("br"),s("s[t] := s[t] * s[t + 1];")]),l("td",null,"次栈顶项乘以栈顶项")]),l("tr",null,[l("td"),l("td",null,"当 a=5"),l("td",null,[s("t := t - 1;"),l("br"),s("s[t] := s[t] div s[t + 1];")]),l("td",null,"次栈顶项除以栈顶项")]),l("tr",null,[l("td"),l("td",null,"当 a=6"),l("td",null,"s[t] := ord(odd(s[t]));"),l("td",null,"栈顶元素的奇偶判断")]),l("tr",null,[l("td"),l("td",null,"当 a=7"),l("td",null,"s[t] := !s[t];"),l("td",null,"栈顶元素取非")]),l("tr",null,[l("td"),l("td",null,"当 a=8"),l("td",null,[s("t := t - 1;"),l("br"),s("s[t] := ord(s[t] = s[t + 1]);")]),l("td",null,"次栈顶项与栈顶项是否相等")]),l("tr",null,[l("td"),l("td",null,"当 a=9"),l("td",null,[s("t = t - 1;"),l("br"),s("s[t] = ord(s[t] <> s[t + 1]);")]),l("td",null,"次栈顶项与栈顶项是否不等")]),l("tr",null,[l("td"),l("td",null,"当 a=10"),l("td",null,[s("t := t - 1;"),l("br"),s("s[t] := ord(s[t] < s[t + 1]);")]),l("td",null,"次栈顶项是否小于栈顶项")]),l("tr",null,[l("td"),l("td",null,"当 a=11"),l("td",null,[s("t := t - 1;"),l("br"),s("s[t] := ord(s[t] >= s[t + 1]);")]),l("td",null,"次栈顶项是否大于等于栈顶项")]),l("tr",null,[l("td"),l("td",null,"当 a=12"),l("td",null,[s("t := t - 1;"),l("br"),s("s[t] := ord(s[t] > s[t + 1]);")]),l("td",null,"次栈顶项是否大于栈顶项")]),l("tr",null,[l("td"),l("td",null,"当 a=13"),l("td",null,[s("t := t - 1;"),l("br"),s("s[t] := ord(s[t] <= s[t + 1]);")]),l("td",null,"次栈顶项是否小于等于栈顶项")]),l("tr",null,[l("td"),l("td",null,"当 a=14"),l("td",null,[s("write(s[t]);"),l("br"),s("t := t - 1;")]),l("td",null,"栈顶值输出")]),l("tr",null,[l("td"),l("td",null,"当 a=15"),l("td",null,'write("\\n");'),l("td",null,"输出换行符")]),l("tr",null,[l("td"),l("td",null,"当 a=16"),l("td",null,[s("t := t + 1;"),l("br"),s("read(s[t]);")]),l("td",null,"读入一个输入置于栈顶")]),l("tr",null,[l("td"),l("td",null,"当 a=17"),l("td",null,[s("t := t - 1;"),l("br"),s("s[t] := s[t] mod s[t + 1];")]),l("td",null,"次栈顶项模栈顶项")]),l("tr",null,[l("td"),l("td",null,"当 a=18"),l("td",null,[s("t := t - 1;"),l("br"),s("s[t] := s[t] xor s[t + 1];")]),l("td",null,"次栈顶项异或栈顶项")]),l("tr",null,[l("td"),l("td",null,"当 a=19"),l("td",null,"s[t] := s[t] + 1;"),l("td",null,"栈顶元素自增1")]),l("tr",null,[l("td"),l("td",null,"当 a=20"),l("td",null,"s[t] := s[t] - 1;"),l("td",null,"栈顶元素自减1")]),l("tr",null,[l("td"),l("td",null,"当 a=21"),l("td",null,[s("t := t - 1;"),l("br"),s("s[t] := (s[t] and s[t + 1]);")]),l("td",null,"次栈顶项与栈顶项逻辑与")]),l("tr",null,[l("td"),l("td",null,"当 a=22"),l("td",null,[s("t := t - 1;"),l("br"),s("s[t] := (s[t] or s[t + 1]);")]),l("td",null,"次栈顶项与栈顶项逻辑或")])])],-1),vl={id:"模块架构",tabindex:"-1"},kl=l("p",null,"该编译程序由以下几个模块组成：词法分析器、语法分析器、语义分析与中间代码生成器、目标代码生成器、表格管理、出错处理。",-1),Il={id:"模块功能介绍",tabindex:"-1"},wl=l("ol",null,[l("li",null,[l("p",null,"词法分析器"),l("p",null,"输入源程序，进行词法分析，输出单词符号串。由子程序 getch 和 getsym 实现。")]),l("li",null,[l("p",null,"语法分析器"),l("p",null,"对单词符号串进行语法分析（根据语法规则进行推导或归约），识别出各类语法单位，最终判断输入的符号串是否构成语法上正确的程序。")]),l("li",null,[l("p",null,"语义分析与中间代码产生器"),l("p",null,"对语法分析器归约出（或推导出）的语法单位进行语义分析并把它们翻译成一定形式的中间代码。词法分析和中间代码产生器被调用穿插于语法分析程序中。")]),l("li",null,[l("p",null,"目标代码生成器"),l("p",null,"把中间代码翻译成目标程序。")]),l("li",null,[l("p",null,"表格管理"),l("p",null,"管理标识符表来登记源程序中出现的每个标识符及其各种属性。在程序说明部分遇到标识符时，要把标识符及其属性登记到标识符表中；在程序处理部分遇到标识符时，要到标识符表中去查证标识符及其属性。")]),l("li",null,[l("p",null,"出错处理"),l("p",null,"如果源程序有语法错误，编译程序会通过出错处理程序设法发现错误，指名错误所在位置，并把有关错误信息报告给用户。将错误造成的影响限制在尽可能小的范围内，使得源程序的其余部分能继续被编译下去，以便进一步发现其他可能的错误。")])],-1),El={id:"模块接口",tabindex:"-1"},Nl=l("ol",null,[l("li",null,"词法分析器：getsym函数，获取源程序中的词。"),l("li",null,"语法分析器：sym变量，保存词法分析所获得的词。"),l("li",null,"语义分析与中间代码产生器：code数组，保存语法分析获得的代码。")],-1),Bl={id:"全局数据结构、常量和变量",tabindex:"-1"},Ml={id:"全局数据结构",tabindex:"-1"},Ul=l("table",null,[l("thead",null,[l("tr",null,[l("th",null,"数据结构名"),l("th",null,"数据结构"),l("th",null,"含义")])]),l("tbody",null,[l("tr",null,[l("td",null,"tablestruct"),l("td",null,"char name[al]"),l("td",null,"名字")]),l("tr",null,[l("td"),l("td",null,"enum object kind"),l("td",null,"类型：const，var")]),l("tr",null,[l("td"),l("td",null,"int val"),l("td",null,"数值，仅const使用")]),l("tr",null,[l("td"),l("td",null,"int level"),l("td",null,"所处层，仅const不使用")]),l("tr",null,[l("td"),l("td",null,"int adr"),l("td",null,"地址，仅const不使用")]),l("tr",null,[l("td"),l("td",null,"int size"),l("td",null,"需要分配的数据区空间, 仅procedure使用")]),l("tr",null,[l("td",null,"instruction"),l("td",null,"enum fct f;"),l("td",null,"虚拟机代码指令")]),l("tr",null,[l("td"),l("td",null,"int l;"),l("td",null,"引用层与声明层的层次差")]),l("tr",null,[l("td"),l("td",null,"int a;"),l("td",null,"根据f的不同而不同")])])],-1),Ll={id:"全局常量",tabindex:"-1"},Tl=l("table",null,[l("thead",null,[l("tr",null,[l("th",null,"常量名"),l("th",null,"常量值"),l("th",null,"常量含义")])]),l("tbody",null,[l("tr",null,[l("td",null,"txmax"),l("td",null,"100"),l("td",null,"符号表容量")]),l("tr",null,[l("td",null,"al"),l("td",null,"10"),l("td",null,"标识符的最大长度")]),l("tr",null,[l("td",null,"amax"),l("td",null,"2048"),l("td",null,"地址上界")]),l("tr",null,[l("td",null,"cxmax"),l("td",null,"200"),l("td",null,"最多的虚拟机代码数")]),l("tr",null,[l("td",null,"stacksize"),l("td",null,"500"),l("td",null,"运行时数据栈元素最多为500个")])])],-1),$l={id:"全局变量",tabindex:"-1"},Pl=l("table",null,[l("thead",null,[l("tr",null,[l("th",null,"变量名"),l("th",null,"变量类型"),l("th",null,"变量含义")])]),l("tbody",null,[l("tr",null,[l("td",null,"tx"),l("td",null,"int"),l("td",null,"符号表当前尾指针")]),l("tr",null,[l("td",null,"cx"),l("td",null,"int"),l("td",null,"虚拟机代码指针, 取值范围[0, cxmax-1]")]),l("tr",null,[l("td",null,"px"),l("td",null,"int"),l("td",null,"嵌套过程索引表proctable的指针")]),l("tr",null,[l("td",null,"lev"),l("td",null,"int"),l("td",null,"层次记录")]),l("tr",null,[l("td",null,"id[al]"),l("td",null,"char"),l("td",null,"标识符数组")]),l("tr",null,[l("td",null,"fin"),l("td",null,"FILE*"),l("td",null,"输入源文件")]),l("tr",null,[l("td",null,"ftable"),l("td",null,"FILE*"),l("td",null,"输出符号表")]),l("tr",null,[l("td",null,"fcode"),l("td",null,"FILE*"),l("td",null,"输出虚拟机代码")]),l("tr",null,[l("td",null,"foutput"),l("td",null,"FILE*"),l("td",null,"输出出错示意（如有错）")]),l("tr",null,[l("td",null,"fresult"),l("td",null,"FILE*"),l("td",null,"输出执行结果")]),l("tr",null,[l("td",null,"finput"),l("td",null,"FILE*"),l("td",null,"输入内容")])])],-1),Sl={id:"函数原型",tabindex:"-1"},Yl=l("table",null,[l("thead",null,[l("tr",null,[l("th",null,"函数原型"),l("th",null,"参数描述"),l("th",null,"函数描述"),l("th",null,"返回值")])]),l("tbody",null,[l("tr",null,[l("td",null,"void yyerror"),l("td",null,"char *s"),l("td",null,"出错处理"),l("td",null,"无")]),l("tr",null,[l("td",null,"void getch"),l("td",null,"无"),l("td",null,"过滤空格和注释，读取一个字符"),l("td",null,"无")]),l("tr",null,[l("td",null,"void getsym"),l("td",null,"无"),l("td",null,"词法分析，获得一个符号"),l("td",null,"无")]),l("tr",null,[l("td",null,"void init"),l("td",null,"无"),l("td",null,"初始化"),l("td",null,"无")]),l("tr",null,[l("td",null,"void enter"),l("td",null,"enum object k"),l("td",null,"在符号表中加入一项"),l("td",null,"无")]),l("tr",null,[l("td",null,"int position"),l("td",null,"char *s"),l("td",null,"查找标识符在符号表中的位置"),l("td",null,"标识符在符号表中的位置")]),l("tr",null,[l("td",null,"void setdx"),l("td",null,"int n"),l("td",null,"为本层变量分配相对地址，从3开始分配"),l("td",null,"无")]),l("tr",null,[l("td",null,"void gen"),l("td",null,[s("enum fct x"),l("br"),s("int y"),l("br"),s("int z")]),l("td",null,"生成虚拟机代码"),l("td",null,"无")]),l("tr",null,[l("td",null,"void listall"),l("td",null,"无"),l("td",null,"输出所有目标代码"),l("td",null,"无")]),l("tr",null,[l("td",null,"void displaytable"),l("td",null,"无"),l("td",null,"输出符号表"),l("td",null,"无")]),l("tr",null,[l("td",null,"void interpret"),l("td",null,"无"),l("td",null,"解释程序"),l("td",null,"无")])])],-1),Ol={id:"测试说明",tabindex:"-1"},Jl={id:"测试环境",tabindex:"-1"},zl=l("ul",null,[l("li",null,"Windows 64位操作系统")],-1),Wl={id:"基本测试流程",tabindex:"-1"},jl=l("ol",null,[l("li",null,"运行程序"),l("li",null,"导入测试代码"),l("li",null,"如有需要，进行程序输入"),l("li",null,"编译运行，查看结果"),l("li",null,"根据需要修改代码"),l("li",null,"再次编译运行，查看结果")],-1),Ql={id:"测试用例描述",tabindex:"-1"},Vl=l("table",null,[l("thead",null,[l("tr",null,[l("th",null,"测试编号"),l("th",null,"测试目标"),l("th",null,"测试用例"),l("th",null,"测试步骤"),l("th",null,"测试结果")])]),l("tbody",null,[l("tr",null,[l("td",null,"1"),l("td",null,"程序基本功能"),l("td",null,"test_1.txt"),l("td",null,"基本测试流程，无修改"),l("td",null,"正确输出 1-100 之间的素数")]),l("tr",null,[l("td",null,"2"),l("td",null,"程序基本功能"),l("td",null,"test_2.txt"),l("td",null,"基本测试流程，输入6 32，无修改"),l("td",null,"正确输出两个整数的最小公倍数 96")]),l("tr",null,[l("td",null,"3"),l("td",null,"程序基本功能"),l("td",null,"test_3.txt"),l("td",null,"基本测试流程，无修改"),l("td",null,"正确输出 1-100 中的所有偶数")]),l("tr",null,[l("td",null,"4"),l("td",null,"程序基本功能"),l("td",null,"test_4.txt"),l("td",null,"基本测试流程，无修改"),l("td",null,"正确输出 i, j, k 中最大的数")]),l("tr",null,[l("td",null,"5"),l("td",null,"程序报错功能"),l("td",null,"test_4.txt"),l("td",null,"将第 9, 12, 17, 20 行最后的分号去掉"),l("td",null,[s("正确输出四个报错："),l("br"),s("You may have missed a ';' in line 10"),l("br"),s("You may have missed a ';' in line 13"),l("br"),s("You may have missed a ';' in line 18"),l("br"),s("You may have missed a ';' in line 21"),l("br"),s("4 errors in smallC program")])]),l("tr",null,[l("td",null,"6"),l("td",null,"程序报错功能"),l("td",null,"test_4.txt"),l("td",null,"将第 8 行的 k 改为 o"),l("td",null,[s("正确输出一个报错："),l("br"),s("Symbol does not exist in line 8"),l("br"),s("1 errors in smallC program")])]),l("tr",null,[l("td",null,"7"),l("td",null,"程序报错功能"),l("td",null,"test_1.txt"),l("td",null,[s("在第 1 行后添加 const a=3;"),l("br"),s("将第 6 行的 i 改为 a")]),l("td",null,[s("正确输出一个报错："),l("br"),s("Symbol should not be a constant in line 7"),l("br"),s("1 errors in smallC program")])])])],-1),Zl=l("hr",null,null,-1),Rl=l("p",null,"这是一个学习了老师给的参考编译器 PL/0 后完成的笨笨编译器，也没有做很多出错检测orz，大家见谅，看个乐呵！",-1);function Gl(e,Hl,Xl,ql,c,Kl){const n=u,p=D;return F(),C(p,{frontmatter:c.frontmatter,data:c.data},{"main-content-md":t(()=>[h,d(" more "),_,m,g,f,x,b,l("p",null,[s("该程序为smallC语言及其扩展的编译器实现，已上传"),o(n,{href:"https://github.com/Yuumi0221/SmallCCompiler",target:"_blank",rel:"noreferrer"},{default:t(()=>[s("Github")]),_:1}),s("。重要文件结构如下：")]),v,l("h2",k,[s("程序使用 "),o(n,{class:"header-anchor",href:"#程序使用","aria-hidden":"true"},{default:t(()=>[s("#")]),_:1})]),l("p",null,[I,s(" 目录下的 "),w,s(" 为程序的可执行文件，下文将介绍其"),o(n,{href:"#%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95"},{default:t(()=>[s("使用方法")]),_:1}),s("。")]),l("h3",E,[s("运行环境 "),o(n,{class:"header-anchor",href:"#运行环境","aria-hidden":"true"},{default:t(()=>[s("#")]),_:1})]),N,l("h3",B,[s("使用方法 "),o(n,{class:"header-anchor",href:"#使用方法","aria-hidden":"true"},{default:t(()=>[s("#")]),_:1})]),M,U,L,T,$,P,S,Y,l("h3",O,[s("测试方法 "),o(n,{class:"header-anchor",href:"#测试方法","aria-hidden":"true"},{default:t(()=>[s("#")]),_:1})]),l("p",null,[s("在 "),J,s(" 目录中有四个以 "),z,s(" 为命名的测试文件。具体使用方法详情见 "),o(n,{href:"#%E6%B5%8B%E8%AF%95%E8%AF%B4%E6%98%8E"},{default:t(()=>[s("测试说明")]),_:1}),s("。")]),l("h2",W,[s("程序设计 "),o(n,{class:"header-anchor",href:"#程序设计","aria-hidden":"true"},{default:t(()=>[s("#")]),_:1})]),j,l("h3",Q,[s("开发环境 "),o(n,{class:"header-anchor",href:"#开发环境","aria-hidden":"true"},{default:t(()=>[s("#")]),_:1})]),V,l("h3",Z,[s("编译器 "),o(n,{class:"header-anchor",href:"#编译器","aria-hidden":"true"},{default:t(()=>[s("#")]),_:1})]),R,l("h4",G,[s("smallC语言语法规则 "),o(n,{class:"header-anchor",href:"#smallc语言语法规则","aria-hidden":"true"},{default:t(()=>[s("#")]),_:1})]),H,X,q,K,ll,sl,l("h4",tl,[s("smallC语言语法图 "),o(n,{class:"header-anchor",href:"#smallc语言语法图","aria-hidden":"true"},{default:t(()=>[s("#")]),_:1})]),nl,ol,l("h4",el,[s("判断是否符合两条限制规则 "),o(n,{class:"header-anchor",href:"#判断是否符合两条限制规则","aria-hidden":"true"},{default:t(()=>[s("#")]),_:1})]),al,rl,cl,pl,l("h4",Dl,[s("程序总体结构 "),o(n,{class:"header-anchor",href:"#程序总体结构","aria-hidden":"true"},{default:t(()=>[s("#")]),_:1})]),il,yl,Cl,l("h4",Fl,[s("语法出错表定义 "),o(n,{class:"header-anchor",href:"#语法出错表定义","aria-hidden":"true"},{default:t(()=>[s("#")]),_:1})]),dl,l("h3",ul,[s("虚拟机 "),o(n,{class:"header-anchor",href:"#虚拟机","aria-hidden":"true"},{default:t(()=>[s("#")]),_:1})]),l("h4",Al,[s("虚拟机组织结构 "),o(n,{class:"header-anchor",href:"#虚拟机组织结构","aria-hidden":"true"},{default:t(()=>[s("#")]),_:1})]),hl,_l,l("h4",ml,[s("虚拟机指令格式 "),o(n,{class:"header-anchor",href:"#虚拟机指令格式","aria-hidden":"true"},{default:t(()=>[s("#")]),_:1})]),gl,fl,l("h4",xl,[s("虚拟机指令系统及其解释 "),o(n,{class:"header-anchor",href:"#虚拟机指令系统及其解释","aria-hidden":"true"},{default:t(()=>[s("#")]),_:1})]),bl,l("h3",vl,[s("模块架构 "),o(n,{class:"header-anchor",href:"#模块架构","aria-hidden":"true"},{default:t(()=>[s("#")]),_:1})]),kl,l("h4",Il,[s("模块功能介绍 "),o(n,{class:"header-anchor",href:"#模块功能介绍","aria-hidden":"true"},{default:t(()=>[s("#")]),_:1})]),wl,l("h4",El,[s("模块接口 "),o(n,{class:"header-anchor",href:"#模块接口","aria-hidden":"true"},{default:t(()=>[s("#")]),_:1})]),Nl,l("h3",Bl,[s("全局数据结构、常量和变量 "),o(n,{class:"header-anchor",href:"#全局数据结构、常量和变量","aria-hidden":"true"},{default:t(()=>[s("#")]),_:1})]),l("h4",Ml,[s("全局数据结构 "),o(n,{class:"header-anchor",href:"#全局数据结构","aria-hidden":"true"},{default:t(()=>[s("#")]),_:1})]),Ul,l("h4",Ll,[s("全局常量 "),o(n,{class:"header-anchor",href:"#全局常量","aria-hidden":"true"},{default:t(()=>[s("#")]),_:1})]),Tl,l("h4",$l,[s("全局变量 "),o(n,{class:"header-anchor",href:"#全局变量","aria-hidden":"true"},{default:t(()=>[s("#")]),_:1})]),Pl,l("h3",Sl,[s("函数原型 "),o(n,{class:"header-anchor",href:"#函数原型","aria-hidden":"true"},{default:t(()=>[s("#")]),_:1})]),Yl,l("h2",Ol,[s("测试说明 "),o(n,{class:"header-anchor",href:"#测试说明","aria-hidden":"true"},{default:t(()=>[s("#")]),_:1})]),l("h3",Jl,[s("测试环境 "),o(n,{class:"header-anchor",href:"#测试环境","aria-hidden":"true"},{default:t(()=>[s("#")]),_:1})]),zl,l("h3",Wl,[s("基本测试流程 "),o(n,{class:"header-anchor",href:"#基本测试流程","aria-hidden":"true"},{default:t(()=>[s("#")]),_:1})]),l("p",null,[s("参考 "),o(n,{href:"#%E7%A8%8B%E5%BA%8F%E4%BD%BF%E7%94%A8"},{default:t(()=>[s("程序使用")]),_:1}),s(" 文件中的程序使用方法进行测试。")]),jl,l("h3",Ql,[s("测试用例描述 "),o(n,{class:"header-anchor",href:"#测试用例描述","aria-hidden":"true"},{default:t(()=>[s("#")]),_:1})]),Vl,Zl,Rl]),"main-header":t(()=>[a(e.$slots,"main-header")]),"main-header-after":t(()=>[a(e.$slots,"main-header-after")]),"main-nav":t(()=>[a(e.$slots,"main-nav")]),"main-content":t(()=>[a(e.$slots,"main-content")]),"main-content-after":t(()=>[a(e.$slots,"main-content-after")]),"main-nav-before":t(()=>[a(e.$slots,"main-nav-before")]),"main-nav-after":t(()=>[a(e.$slots,"main-nav-after")]),comment:t(()=>[a(e.$slots,"comment")]),footer:t(()=>[a(e.$slots,"footer")]),aside:t(()=>[a(e.$slots,"aside")]),"aside-custom":t(()=>[a(e.$slots,"aside-custom")]),default:t(()=>[a(e.$slots,"default")]),_:3},8,["frontmatter","data"])}const as=i(A,[["render",Gl]]);export{es as __pageData,as as default};
